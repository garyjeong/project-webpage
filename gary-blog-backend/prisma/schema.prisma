// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client_rw"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        String    @id @unique @default(uuid()) @db.VarChar(100)
  useremail String    @unique @db.VarChar(100)
  username  String    @db.VarChar(30)
  password  String?   @db.VarChar(100)
  createAt  DateTime  @default(now()) @db.DateTime(0)
  updateAt  DateTime  @updatedAt
  deleteAt  DateTime?

  sns_id   user_sns?
  posts    post[]
  comments comment[]
}

model user_sns {
  seq      Int      @id @default(autoincrement())
  sns_id   String   @unique @db.VarChar(20)
  sns_type PROVIDER

  user_id String @unique
  user    user   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

enum PROVIDER {
  KAKAO
  NAVER
  GOOGLE
}

model post {
  post_id   String    @id @unique @default(uuid()) @db.VarChar(100)
  title     String    @db.VarChar(500)
  thumbnail String    @db.Text
  content   String    @db.VarChar(2000)
  createAt  DateTime  @default(now()) @db.DateTime(0)
  updateAt  DateTime  @updatedAt
  deleteAt  DateTime?

  author_id String
  author    user   @relation(fields: [author_id], references: [id], onDelete: Cascade)

  comments comment[]
}

model comment {
  comment_id String    @id @unique @default(uuid()) @db.VarChar(100)
  comment    String    @db.VarChar(500)
  createAt   DateTime  @default(now()) @db.DateTime(0)
  updateAt   DateTime  @updatedAt
  deleteAt   DateTime?

  author_id String
  author    user   @relation(fields: [author_id], references: [id], onDelete: Cascade)

  post_id String
  post    post   @relation(fields: [post_id], references: [post_id], onDelete: Cascade)
}
